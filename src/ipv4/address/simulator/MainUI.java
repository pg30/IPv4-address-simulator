/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ipv4.address.simulator;

import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author PRANAY GARG
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        setExtendedState(getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.setBackground(Color.white);
        //textIP1.setText("                   ");
//        textIP2.setText("                   ");
//        textIP3.setText("                   ");
//        textIP4.setText("                   ");
//        textIP5.setText("                   ");
//        textIP6.setText("                   ");
//        textIP7.setText("                   ");
//        textIP8.setText("                   ");
//        textIP9.setText("                   ");
//        textIP10.setText("                   ");
//        textIP11.setText("                   ");
//        textIP12.setText("                   ");
//        textSubnet1.setText("                   ");
//        textSubnet2.setText("                   ");
//        textSubnet3.setText("                   ");
//        textSubnet4.setText("                   ");
//        textSubnet5.setText("                   ");
//        textSubnet6.setText("                   ");
//        textSubnet7.setText("                   ");
//        textSubnet8.setText("                   ");
//        textSubnet9.setText("                   ");
//        textSubnet10.setText("                   ");
//        textSubnet11.setText("                   ");
//        textSubnet12.setText("                   ");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHeading = new javax.swing.JPanel();
        labelHeading = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelChooseClass = new javax.swing.JLabel();
        comboboxClass = new javax.swing.JComboBox<>();
        buttonSubmit = new javax.swing.JButton();
        panelBottom = new javax.swing.JPanel();
        labelIcon1 = new javax.swing.JLabel();
        labelIcon2 = new javax.swing.JLabel();
        labelIcon3 = new javax.swing.JLabel();
        labelIP1 = new javax.swing.JLabel();
        labelSubnet1 = new javax.swing.JLabel();
        labelIP2 = new javax.swing.JLabel();
        labelSubnet2 = new javax.swing.JLabel();
        labelIP3 = new javax.swing.JLabel();
        labelSubnet3 = new javax.swing.JLabel();
        textIP1 = new javax.swing.JTextField();
        textIP2 = new javax.swing.JTextField();
        textIP3 = new javax.swing.JTextField();
        textIP4 = new javax.swing.JTextField();
        textSubnet1 = new javax.swing.JTextField();
        textSubnet2 = new javax.swing.JTextField();
        textSubnet3 = new javax.swing.JTextField();
        textSubnet4 = new javax.swing.JTextField();
        textIP5 = new javax.swing.JTextField();
        textIP6 = new javax.swing.JTextField();
        textIP7 = new javax.swing.JTextField();
        textIP8 = new javax.swing.JTextField();
        textSubnet5 = new javax.swing.JTextField();
        textSubnet6 = new javax.swing.JTextField();
        textSubnet7 = new javax.swing.JTextField();
        textSubnet8 = new javax.swing.JTextField();
        textIP9 = new javax.swing.JTextField();
        textIP10 = new javax.swing.JTextField();
        textIP11 = new javax.swing.JTextField();
        textIP12 = new javax.swing.JTextField();
        textSubnet9 = new javax.swing.JTextField();
        textSubnet10 = new javax.swing.JTextField();
        textSubnet11 = new javax.swing.JTextField();
        textSubnet12 = new javax.swing.JTextField();
        labelResult1 = new javax.swing.JLabel();
        labelResult2 = new javax.swing.JLabel();
        labelResult3 = new javax.swing.JLabel();
        buttonEvaluate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulator");
        setBackground(java.awt.SystemColor.window);
        setResizable(false);

        labelHeading.setBackground(new java.awt.Color(255, 255, 255));
        labelHeading.setFont(new java.awt.Font("Bradley Hand ITC", 1, 36)); // NOI18N
        labelHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelHeading.setText("IPv4 Addressing");

        javax.swing.GroupLayout panelHeadingLayout = new javax.swing.GroupLayout(panelHeading);
        panelHeading.setLayout(panelHeadingLayout);
        panelHeadingLayout.setHorizontalGroup(
            panelHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelHeading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelHeadingLayout.setVerticalGroup(
            panelHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelHeading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        labelChooseClass.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelChooseClass.setText("Choose the Class in which IP Addressing is to be done  :");

        comboboxClass.setFont(new java.awt.Font("Bradley Hand ITC", 1, 12)); // NOI18N
        comboboxClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select One--", "Class A", "Class B", "Class C" }));

        buttonSubmit.setFont(new java.awt.Font("Bradley Hand ITC", 1, 12)); // NOI18N
        buttonSubmit.setText("Submit");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelChooseClass, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(comboboxClass, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(buttonSubmit)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelChooseClass)
                    .addComponent(comboboxClass)
                    .addComponent(buttonSubmit))
                .addGap(38, 38, 38))
        );

        labelIcon1.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelIcon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipv4/address/simulator/pcicon.jpg"))); // NOI18N
        labelIcon1.setText(" PC1 :");

        labelIcon2.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelIcon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipv4/address/simulator/pcicon.jpg"))); // NOI18N
        labelIcon2.setText(" PC2 :");

        labelIcon3.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelIcon3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipv4/address/simulator/pcicon.jpg"))); // NOI18N
        labelIcon3.setText(" PC3 :");

        labelIP1.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelIP1.setText("IPv4 Address :");

        labelSubnet1.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelSubnet1.setText("Subnet Mask :");

        labelIP2.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelIP2.setText("IPv4 Address :");

        labelSubnet2.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelSubnet2.setText("Subnet Mask :");

        labelIP3.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelIP3.setText("IPv4 Address :");

        labelSubnet3.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelSubnet3.setText("Subnet Mask :");

        textIP1.setMaximumSize(new java.awt.Dimension(59, 20));
        textIP1.setMinimumSize(new java.awt.Dimension(59, 20));

        textIP3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIP3ActionPerformed(evt);
            }
        });

        textIP9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIP9ActionPerformed(evt);
            }
        });

        labelResult1.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelResult1.setText("RESULT :");

        labelResult2.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelResult2.setText("RESULT :");

        labelResult3.setFont(new java.awt.Font("Bradley Hand ITC", 1, 14)); // NOI18N
        labelResult3.setText("RESULT :");

        buttonEvaluate.setFont(new java.awt.Font("Bradley Hand ITC", 1, 12)); // NOI18N
        buttonEvaluate.setText("Evaluate");
        buttonEvaluate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEvaluateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBottomLayout = new javax.swing.GroupLayout(panelBottom);
        panelBottom.setLayout(panelBottomLayout);
        panelBottomLayout.setHorizontalGroup(
            panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBottomLayout.createSequentialGroup()
                                .addComponent(labelIcon1)
                                .addGap(18, 18, 18)
                                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelBottomLayout.createSequentialGroup()
                                        .addComponent(labelSubnet1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textSubnet1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                                    .addGroup(panelBottomLayout.createSequentialGroup()
                                        .addComponent(labelIP1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textIP1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textSubnet2, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                                    .addComponent(textIP2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textSubnet3, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .addComponent(textIP3))
                                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBottomLayout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(labelResult3, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                            .addComponent(labelResult2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelResult1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(panelBottomLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textIP4, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                            .addComponent(textSubnet4)))))
                            .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(buttonEvaluate)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textIP12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelBottomLayout.createSequentialGroup()
                                        .addComponent(labelIcon2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBottomLayout.createSequentialGroup()
                                                .addComponent(labelIP2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(textIP5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(panelBottomLayout.createSequentialGroup()
                                                .addComponent(labelSubnet2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(textSubnet5)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textIP6, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                            .addComponent(textSubnet6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textSubnet7, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                            .addComponent(textIP7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textIP8, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                            .addComponent(textSubnet8))))))
                        .addContainerGap(369, Short.MAX_VALUE))
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addComponent(labelIcon3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBottomLayout.createSequentialGroup()
                                .addComponent(labelIP3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textIP9, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelBottomLayout.createSequentialGroup()
                                .addComponent(labelSubnet3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textSubnet9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textIP10, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(textSubnet10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textIP11, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(textSubnet11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textSubnet12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(604, 604, 604))))
        );
        panelBottomLayout.setVerticalGroup(
            panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBottomLayout.createSequentialGroup()
                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelIcon1)
                            .addComponent(labelResult1)))
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelIP1)
                            .addComponent(textIP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textIP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textIP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textIP4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSubnet1)
                            .addComponent(textSubnet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(labelIcon2))
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBottomLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelIP2)
                                    .addComponent(textIP5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textIP6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textIP7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textIP8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelBottomLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(labelResult2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSubnet2)
                            .addComponent(textSubnet5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(labelIcon3))
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(labelResult3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSubnet3)
                            .addComponent(textSubnet9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textSubnet12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelIP3)
                            .addComponent(textIP9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textIP10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textIP11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textIP12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(buttonEvaluate)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHeading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 54, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelHeading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonEvaluateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEvaluateActionPerformed
        solve();
    }//GEN-LAST:event_buttonEvaluateActionPerformed

    private void textIP3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIP3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIP3ActionPerformed

    private void textIP9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIP9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIP9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }
    final String subA = "255.0.0.0";
    final String subB = "255.255.0.0";
    final String subC = "255.255.255.0";
    void solve()
    {
        int cl = comboboxClass.getSelectedIndex();
        System.out.println("class is"+cl);
        int a = Integer.parseInt(textIP1.getText().trim());
        int b = Integer.parseInt(textIP2.getText().trim());
        int c = Integer.parseInt(textIP3.getText().trim());
        int d = Integer.parseInt(textIP4.getText().trim());
        System.out.println(a+" "+b+" "+c+" "+d);
        IP pc1 = new IP(a,b,c,d);
        a = Integer.parseInt(textIP5.getText().trim());
        b = Integer.parseInt(textIP6.getText().trim());
        c = Integer.parseInt(textIP7.getText().trim());
        d = Integer.parseInt(textIP8.getText().trim());
        IP pc2 = new IP(a,b,c,d);
        a = Integer.parseInt(textIP9.getText().trim());
        b = Integer.parseInt(textIP10.getText().trim());
        c = Integer.parseInt(textIP11.getText().trim());
        d = Integer.parseInt(textIP12.getText().trim());
        IP pc3 = new IP(a,b,c,d);
        switch (cl) {
            case 1:        
                solveA(pc1,pc2,pc3);
                break;
            case 2:
                solveB(pc1,pc2,pc3);
                break;
            case 3:
                solveC(pc1,pc2,pc3);
                break;
            default:
                JOptionPane.showMessageDialog(this, "Please Select valid Class", "Error", HEIGHT);
                break;
        }
    }
    void display(boolean ok)
    {
        if(ok)
        {
            labelResult1.setText("RESULT : PC1 in network");
            labelResult2.setText("RESULT : PC2 in network");
            labelResult3.setText("RESULT : PC3 in network");
        }
        else
        {
            labelResult1.setText("RESULT : PC1 not in network");
            labelResult2.setText("RESULT : PC2 not in network");
            labelResult3.setText("RESULT : PC3 not in network");            
        }        
    }
    void solveA(IP pc1,IP pc2,IP pc3)
    {
        boolean ok = true;
        String sub1 = textSubnet1.getText().trim()+"."+textSubnet2.getText().trim()+"."+textSubnet3.getText().trim()+"."+textSubnet4.getText().trim();
        String sub2 = textSubnet5.getText().trim()+"."+textSubnet6.getText().trim()+"."+textSubnet7.getText().trim()+"."+textSubnet8.getText().trim();
        String sub3 = textSubnet9.getText().trim()+"."+textSubnet10.getText().trim()+"."+textSubnet11.getText().trim()+"."+textSubnet12.getText().trim();
        if(!checkSub(subA, sub1) || !checkSub(subA, sub2) || !checkSub(subA, sub3)) ok = false;
        System.out.println("after sub "+ok+"...."+sub1+checkSub(subA, sub1));
        int net1,net2,net3;
        net1 = pc1.octet1;net2 = pc2.octet1;net3 = pc3.octet1;
        if(ok && !(net1==net2 && net2==net3 && net1>0 && net1<127))
            ok = false;
        System.out.println("after netid "+ok);
        if(ok && (checkSameIP(pc1, pc2, 1) || checkSameIP(pc2, pc3, 1) || checkSameIP(pc1, pc3, 1))) ok = false;
        if(ok && (checkCornerIP(pc1,1) || checkCornerIP(pc2,1) || checkCornerIP(pc3,1))) ok =false;
        System.out.println("after cornerip "+ok);
        if(ok && (!checkIP(pc1,1) || !checkIP(pc2,1) || !checkIP(pc3,1))) ok = false;
        System.out.println("after checkip "+ok);
        display(ok);
    }
    boolean checkSameIP(IP a,IP b,int cl)
    {
        switch(cl)
        {
            case 1:
                return a.octet2==b.octet2 && a.octet3==b.octet3 && a.octet4==b.octet4;
            case 2:
                return a.octet3==b.octet3 && a.octet4==b.octet4;
            case 3:
                return a.octet4==b.octet4;
        }
        return true;
    }
    boolean checkIP(IP a,int cl)
    {
        switch (cl) {
            case 1:
                return a.octet2>=0 && a.octet2<=255 && a.octet3>=0 && a.octet3<=255 && a.octet4>=0 && a.octet4<=255;
            case 2:
                return a.octet3>=0 && a.octet3<=255 && a.octet4>=0 && a.octet4<=255;
            case 3:
                return a.octet4>=0 && a.octet4<=255;
            default:
                return false;
        }
    }
    boolean checkCornerIP(IP a,int cl)
    {
        int cnt0=0,cnt255=0;
        if(cl==1)
        {
            if(a.octet3==0) cnt0++;
            if(a.octet2==0) cnt0++;
            if(a.octet4==0) cnt0++;
            if(a.octet3==255) cnt255++;
            if(a.octet2==255) cnt255++;
            if(a.octet4==255) cnt255++;
            return cnt0==3||cnt255==3;
        }
        else if(cl==2)
        {
            if(a.octet3==0) cnt0++;
            if(a.octet4==0) cnt0++;
            if(a.octet3==255) cnt255++;
            if(a.octet4==255) cnt255++;
            return cnt0==2||cnt255==2;
        }
        else if(cl==3)
        {
            if(a.octet4==0) cnt0++;
            if(a.octet4==255) cnt255++;
            return cnt0==1||cnt255==1;
        }
        return false;
    }
    void solveB(IP pc1,IP pc2,IP pc3)
    {
        boolean ok = true;
        String sub1 = textSubnet1.getText().trim()+"."+textSubnet2.getText().trim()+"."+textSubnet3.getText().trim()+"."+textSubnet4.getText().trim();
        String sub2 = textSubnet5.getText().trim()+"."+textSubnet6.getText().trim()+"."+textSubnet7.getText().trim()+"."+textSubnet8.getText().trim();
        String sub3 = textSubnet9.getText().trim()+"."+textSubnet10.getText().trim()+"."+textSubnet11.getText().trim()+"."+textSubnet12.getText().trim();
        if(!checkSub(subB, sub1) || !checkSub(subB, sub2) || !checkSub(subB, sub3)) ok = false;
        int net1,net2,net3,net4,net5,net6;
        net1 = pc1.octet1;net2 = pc2.octet1;net3 = pc3.octet1;
        net4 = pc1.octet2;net5 = pc2.octet2;net6 = pc3.octet2;
        if(ok && !(net1==net2 && net2==net3 && net4==net5 && net5==net6 && net1>127 && net1<192 && net4>=0 && net4<=255))
            ok = false;
        if(ok && (checkSameIP(pc1, pc2, 2) && checkSameIP(pc2, pc3, 2)||checkSameIP(pc1, pc3, 2))) ok = false;
        if(ok && (checkCornerIP(pc1,2) || checkCornerIP(pc2,2) || checkCornerIP(pc3,2))) ok =false;
        if(ok && (!checkIP(pc1,2) || !checkIP(pc2,2) || !checkIP(pc3,2))) ok = false;
        display(ok);        
    }
    void solveC(IP pc1,IP pc2,IP pc3)
    {
        boolean ok = true;
        String sub1 = textSubnet1.getText().trim()+"."+textSubnet2.getText().trim()+"."+textSubnet3.getText().trim()+"."+textSubnet4.getText().trim();
        String sub2 = textSubnet5.getText().trim()+"."+textSubnet6.getText().trim()+"."+textSubnet7.getText().trim()+"."+textSubnet8.getText().trim();
        String sub3 = textSubnet9.getText().trim()+"."+textSubnet10.getText().trim()+"."+textSubnet11.getText().trim()+"."+textSubnet12.getText().trim();
        if(!checkSub(subC, sub1) || !checkSub(subC, sub2) || !checkSub(subC, sub3)) ok = false;
        int net1,net2,net3,net4,net5,net6,net7,net8,net9;
        net1 = pc1.octet1;net2 = pc2.octet1;net3 = pc3.octet1;
        net4 = pc1.octet2;net5 = pc2.octet2;net6 = pc3.octet2;
        net7 = pc1.octet3;net8 = pc2.octet3;net9 = pc3.octet3;
        if(ok && !(net1==net2 && net2==net3 && net4==net5 && net5==net6 && net7==net8 && net8==net9 && net1>191 && net1<224 && net4>=0 && net4<=255 && net7>=0 && net7<=255))
            ok = false;
        if(ok && (checkSameIP(pc1, pc2, 3) && checkSameIP(pc2, pc3, 3) || checkSameIP(pc1, pc2, 3))) ok = false;
        if(ok && (checkCornerIP(pc1,3) || checkCornerIP(pc2,3) || checkCornerIP(pc3,3))) ok =false;
        if(ok && (!checkIP(pc1,3) || !checkIP(pc2,3) || !checkIP(pc3,3))) ok = false;
        display(ok);        
    }
    boolean checkSub(String a,String b)
    {
        System.out.println(a+"....."+b);
        return b.equals(a);
    }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEvaluate;
    private javax.swing.JButton buttonSubmit;
    private javax.swing.JComboBox<String> comboboxClass;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelChooseClass;
    private javax.swing.JLabel labelHeading;
    private javax.swing.JLabel labelIP1;
    private javax.swing.JLabel labelIP2;
    private javax.swing.JLabel labelIP3;
    private javax.swing.JLabel labelIcon1;
    private javax.swing.JLabel labelIcon2;
    private javax.swing.JLabel labelIcon3;
    private javax.swing.JLabel labelResult1;
    private javax.swing.JLabel labelResult2;
    private javax.swing.JLabel labelResult3;
    private javax.swing.JLabel labelSubnet1;
    private javax.swing.JLabel labelSubnet2;
    private javax.swing.JLabel labelSubnet3;
    private javax.swing.JPanel panelBottom;
    private javax.swing.JPanel panelHeading;
    private javax.swing.JTextField textIP1;
    private javax.swing.JTextField textIP10;
    private javax.swing.JTextField textIP11;
    private javax.swing.JTextField textIP12;
    private javax.swing.JTextField textIP2;
    private javax.swing.JTextField textIP3;
    private javax.swing.JTextField textIP4;
    private javax.swing.JTextField textIP5;
    private javax.swing.JTextField textIP6;
    private javax.swing.JTextField textIP7;
    private javax.swing.JTextField textIP8;
    private javax.swing.JTextField textIP9;
    private javax.swing.JTextField textSubnet1;
    private javax.swing.JTextField textSubnet10;
    private javax.swing.JTextField textSubnet11;
    private javax.swing.JTextField textSubnet12;
    private javax.swing.JTextField textSubnet2;
    private javax.swing.JTextField textSubnet3;
    private javax.swing.JTextField textSubnet4;
    private javax.swing.JTextField textSubnet5;
    private javax.swing.JTextField textSubnet6;
    private javax.swing.JTextField textSubnet7;
    private javax.swing.JTextField textSubnet8;
    private javax.swing.JTextField textSubnet9;
    // End of variables declaration//GEN-END:variables
}
